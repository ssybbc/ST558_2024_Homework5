[
  {
    "objectID": "HW5.html",
    "href": "HW5.html",
    "title": "ST550-homework5",
    "section": "",
    "text": "This week we are going to work on a student data, basically using exploratory data analysis to analyze the distribution of students’ score and analyze the relationship between students’ score and their home life. The data we are going to use are from the UCI machine learning data repository and is about secondary education in two Portugease schools. I actually searched online for the school name “Gabriel Pereira” and found it is actually in the southern area of Portugal, a city called Evora. This city comes with nice districting, neat road design, with residential and commerical in the center and northern part of the city and large factory in the south and eastern outskirts, and is facilitated by a express ring road. Another school named “Mousinho da Silveira” is seated in the mountain area that boarders Spain. The spread of city itself is linear from north to south and there is even a Castle in the city."
  },
  {
    "objectID": "HW5.html#categorical-variables",
    "href": "HW5.html#categorical-variables",
    "title": "ST550-homework5",
    "section": "Categorical variables",
    "text": "Categorical variables\nBaseR has a good function to generate contigency table called table(). We will first use this function to generate a one-way, a two-way and a three-way contingency table.\n\ntable(matpor4$schoolfct)\n\n\n GP  MS \n287  33 \n\n\nThis one-way contingency table showed basically the number of students from each school in the combined data set. For example, there are 287 students in the GP high school.\n\ntable (matpor4$Mjobfct, matpor4$studytimefct)\n\n          \n            1  2  3  4\n  at_home  10 21 11  2\n  health    8 16  4  2\n  other    29 58 17 12\n  services 21 33 14  7\n  teacher  13 29 10  3\n\n\nThis two-way contingency table showed the students’ weekly study time and their mom’s job. For example, it showed there are 7 students whose moms work as civic servants had weekly study time more than 10 hours.\n\ntable (matpor4$Mjobfct, matpor4$studytimefct, matpor4$Fjobfct)\n\n, ,  = at_home\n\n          \n            1  2  3  4\n  at_home   1  2  3  0\n  health    0  0  0  0\n  other     0  2  2  0\n  services  0  1  1  0\n  teacher   1  1  0  0\n\n, ,  = health\n\n          \n            1  2  3  4\n  at_home   0  1  0  0\n  health    1  2  1  1\n  other     0  1  0  1\n  services  0  0  2  1\n  teacher   0  3  1  0\n\n, ,  = other\n\n          \n            1  2  3  4\n  at_home   7 10  4  2\n  health    5  9  1  0\n  other    21 44 13  9\n  services  8 16  5  2\n  teacher   4 14  2  1\n\n, ,  = services\n\n          \n            1  2  3  4\n  at_home   2  6  4  0\n  health    2  4  2  1\n  other     6  8  1  2\n  services 11 14  4  4\n  teacher   3  5  6  2\n\n, ,  = teacher\n\n          \n            1  2  3  4\n  at_home   0  2  0  0\n  health    0  1  0  0\n  other     2  3  1  0\n  services  2  2  2  0\n  teacher   5  6  1  0\n\n\nIn addition, this three-way contingency table showed the weekly study time and their mom’s job, on the condition of their father’s job. You could see there are 4 students whose both parents work as civic servants study more than 10 hours a week.\nNext we will create a conditional two-way table using filter () function and subsetting separately.\n\nmatpor4subset &lt;- matpor4|&gt; filter (Fjobfct == \"health\")\ntable (matpor4subset$Mjobfct, matpor4subset$studytimefct)\n\n          \n           1 2 3 4\n  at_home  0 1 0 0\n  health   1 2 1 1\n  other    0 1 0 1\n  services 0 0 2 1\n  teacher  0 3 1 0\n\n\nAbove is the filter data method\n\njbsttmtable &lt;- table (matpor4$Mjobfct, matpor4$studytimefct, matpor4$Fjobfct)\njbsttmtable[,,2]\n\n          \n           1 2 3 4\n  at_home  0 1 0 0\n  health   1 2 1 1\n  other    0 1 0 1\n  services 0 0 2 1\n  teacher  0 3 1 0\n\n\nThe above is the subsetting method.\nNext we create a two-way contingency table using group_by() and summarize(). For example we could do school and study time.\n\nmatpor4 |&gt; group_by(schoolfct, studytimefct) |&gt; summarize (count = n())\n\n`summarise()` has grouped output by 'schoolfct'. You can override using the\n`.groups` argument.\n\n\n# A tibble: 7 × 3\n# Groups:   schoolfct [2]\n  schoolfct studytimefct count\n  &lt;fct&gt;     &lt;fct&gt;        &lt;int&gt;\n1 GP        1               69\n2 GP        2              143\n3 GP        3               49\n4 GP        4               26\n5 MS        1               12\n6 MS        2               14\n7 MS        3                7\n\n\nWe could use the function pivot_wider() to transform the table into a table()-style like output.\n\nmatpor4 |&gt; group_by(schoolfct, studytimefct) |&gt; summarize (count = n()) |&gt; pivot_wider(names_from = schoolfct, values_from = count)\n\n`summarise()` has grouped output by 'schoolfct'. You can override using the\n`.groups` argument.\n\n\n# A tibble: 4 × 3\n  studytimefct    GP    MS\n  &lt;fct&gt;        &lt;int&gt; &lt;int&gt;\n1 1               69    12\n2 2              143    14\n3 3               49     7\n4 4               26    NA\n\n\nLastly we will create a bar graph showed the number of students with different mothers’ job.\n\nggplot (data = matpor4, aes (x = Mjobfct)) +\n  geom_bar() +\n  labs (x=\"Mother's job\")\n\n\n\n\n\n\n\n\nWe then create a side-by-side bar graph showing the number of students with different study time and mother’s job.\n\nggplot (data = matpor4, aes (x = studytimefct, fill = Mjobfct)) +\n  geom_bar(position = \"dodge\") +\n  labs (x=\"Weekly study time level\")"
  },
  {
    "objectID": "HW5.html#numeric-variables",
    "href": "HW5.html#numeric-variables",
    "title": "ST550-homework5",
    "section": "Numeric variables",
    "text": "Numeric variables\nFirst we want to find the center and spread to characterize the numeric variable in the combined data set: age, absence and G3. Need to remember for the combined data set, there are two variable for G3, one for math, another one for Portuguese.\n\nnumericsummary &lt;- matpor4 |&gt; \n  rename (absences_mat = absences.x, absences.por = absences.y, G3_mat = G3.x, G3_por = G3.y) |&gt; \n  summarize (across (c(age, absences_mat, G3_mat),                                                                       .fns = list (\"mean\" = mean, \"median\" = median, \"var\" = var, \"sd\" = sd, \"IQR\" = IQR), \n                     .names = \"{.fn}_{.col}\"))\n\nWe could subset the data only to show the stats related with the variable “age”\n\nnumericsummary [1:5]\n\n# A tibble: 1 × 5\n  mean_age median_age var_age sd_age IQR_age\n     &lt;dbl&gt;      &lt;dbl&gt;   &lt;dbl&gt;  &lt;dbl&gt;   &lt;dbl&gt;\n1     16.5         16    1.30   1.14       1"
  }
]